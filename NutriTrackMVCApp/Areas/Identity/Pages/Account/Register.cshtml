@page
@model NutriTrackMVCApp.Areas.Identity.Pages.Account.RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div class="form-group">
                <label asp-for="Input.Email" class="control-label"></label>
                <input asp-for="Input.Email" class="form-control" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password" class="control-label"></label>
                <input asp-for="Input.Password" type="password" class="form-control" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword" class="control-label"></label>
                <input asp-for="Input.ConfirmPassword" type="password" class="form-control" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.SelectedRole" class="control-label"></label>
                <select asp-for="Input.SelectedRole" class="form-control">
                    <option value="Admin">Admin</option>
                    <option value="Customer">Customer</option>
                </select>
                <span asp-validation-for="Input.SelectedRole" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>
</div>

<!--
Updated Register.cshtml (updates made after the pages was scaffolded)

How It Works:
- A dropdown for role selection is added to the registration form.
- Users can select their role (e.g., Admin or Customer) during registration.

Explanation of Changes:
1. Added Role Selection:
   - A <select> element with asp-for="Input.SelectedRole" binds the selected role 
     to the InputModel.SelectedRole property in the backend.
   - Role options include Admin and Customer (or other roles you want to define).

2. Preserved Existing Fields:
   - The fields for Email, Password, and ConfirmPassword remain unchanged.

3. Form Layout:
   - Added form-group classes to match the Bootstrap styling used in most Identity pages.

4. Validation:
   - Included validation messages for SelectedRole in case the user skips selection.

-->

